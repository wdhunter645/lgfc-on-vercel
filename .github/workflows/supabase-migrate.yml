name: Supabase Migrate (single-prod)

on:
  push:
    branches: [ main, test ]
    paths:
      - "supabase/migrations/**"
      - ".github/workflows/supabase-migrate.yml"
  workflow_dispatch:

concurrency:
  group: supabase-migrate-${{ github.ref }}
  cancel-in-progress: true

jobs:
  migrate:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      # Use the exact repo secret names you already have
      SB_PAT: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SB_REF: ${{ secrets.SUPABASE_PROJECT_ID }}
      SB_PW:  ${{ secrets.SUPABASE_DB_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Ensure migrations exist (soft skip)
        id: check
        shell: bash
        run: |
          set -euo pipefail
          if [ ! -d "supabase/migrations" ] || ! ls supabase/migrations/*.sql >/dev/null 2>&1; then
            echo "no_migrations=true" >> "$GITHUB_OUTPUT"
            echo "ℹ️ No migrations found. Skipping apply."
          else
            echo "no_migrations=false" >> "$GITHUB_OUTPUT"
            echo "✅ Migrations present."
          fi

      - name: Install Supabase CLI
        if: steps.check.outputs.no_migrations == 'false'
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Login & Link (single Supabase prod)
        if: steps.check.outputs.no_migrations == 'false'
        shell: bash
        env:
          SUPABASE_ACCESS_TOKEN: ${{ env.SB_PAT }}
          SUPABASE_PROJECT_ID: ${{ env.SB_REF }}
          SUPABASE_DB_PASSWORD: ${{ env.SB_PW }}
        run: |
          set -euo pipefail
          supabase --version
          # Login with PAT
          supabase login --token "${SUPABASE_ACCESS_TOKEN}"
          # Link to the one prod project (no env switching)
          supabase link --project-ref "${SUPABASE_PROJECT_ID}" --password "${SUPABASE_DB_PASSWORD}"
          echo "✅ Linked to project ${SUPABASE_PROJECT_ID}"

      - name: Apply migrations (db push)
        if: steps.check.outputs.no_migrations == 'false'
        shell: bash
        run: |
          set -euo pipefail
          supabase db push --linked
          echo "✅ Migrations applied."

      - name: Summary
        if: always()
        run: |
          echo "Branch: ${{ github.ref_name }}"
          echo "Project Ref: ${{ env.SB_REF }}"
